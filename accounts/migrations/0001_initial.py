# Generated by Django 3.2 on 2022-05-17 12:44

import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_column='email', max_length=254, unique=True, verbose_name='E-mail')),
                ('name', models.CharField(db_column='name', max_length=150, verbose_name='Nome completo')),
                ('phone_number', models.CharField(db_column='phone_number', max_length=11, validators=[django.core.validators.RegexValidator(message='Telefone inv√°lido', regex='^[1-9]{2}9[0-9]{8}$')], verbose_name='Telefone celular')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('last_login', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_trusty', models.BooleanField(default=False)),
                ('confirmation_key', models.CharField(blank=True, db_column='confirmation_key', max_length=24, null=True)),
                ('created_at', models.DateField(auto_now_add=True, db_column='created_at', verbose_name='Created in')),
                ('updated_at', models.DateField(auto_now=True, db_column='updated_at', verbose_name='Updated in')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
    ]
